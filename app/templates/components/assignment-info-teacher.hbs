<div class="info-flex-item assignment-name">
  {{#if isEditing}}
    {{input type="text" value=assignmentName}}
  {{else}}
    {{assignment.name}}
  {{/if}}
</div>
<div class="info-flex-item creation-details">
  by
  {{#link-to "user" assignment.createdBy.username}}
    {{assignment.createdBy.username}}
  {{/link-to}}
  on
  {{format-date assignment.createDate "Do MMM YYYY"}}
</div>
<div class="info-flex-item single-line assigned-date">
  <p class="label">
    Assigned
  </p>
  {{#if showAssignedDateInput}}
    {{input
      name="daterange"
      id="assignedDate"
      type="text"
      value=assignedDateEditVal
    }}
  {{else}}
    <p class="value">
      {{format-date assignment.assignedDate "Do MMM YYYY"}}
    </p>
  {{/if}}
</div>
<div class="info-flex-item single-line due-date">
  <p class="label">
    Due
  </p>
  {{#if showDueDateInput}}
    {{input id="dueDate" name="daterange" type="text" value=dueDateEditVal}}
  {{else}}
    <p class="value">
      {{format-date assignment.dueDate "Do MMM YYYY"}}
    </p>
  {{/if}}
</div>
<div class="info-flex-item section">
  <p class="label">
    Class
  </p>
  {{#if showSectionInput}}
    {{selectize-input
      inputId="assn-new-section-select"
      initialOptions=sectionOptions
      initialItems=initialSectionItem
      onItemAdd=(action "updateSelectizeSingle")
      onItemRemove=(action "updateSelectizeSingle")
      maxItems=1
      labelField="name"
      valueField="id"
      searchField="name"
      propToUpdate="selectedSection"
      placeholder="Search for a section by name"
      model="section"
      store=store
    }}
  {{else}}
    {{#link-to "section" section}}
      {{section.name}}
    {{/link-to}}
  {{/if}}
</div>
<div class="info-flex-item problem">
  <p class="label">
    Problem
  </p>
  {{#if showProblemInput}}
    {{selectize-input
      store=store
      inputId="assn-new-problem-select"
      initialOptions=problemOptions
      initialItems=initialProblemItem
      onItemAdd=(action "updateSelectizeSingle")
      onItemRemove=(action "updateSelectizeSingle")
      maxItems=1
      labelField="title"
      valueField="id"
      searchField="title"
      propToUpdate="selectedProblem"
      placeholder="Search for a problem by title"
      isAsync=true
      model="problem"
      queryParamsKey="query"
      searchCriterion="title"
      topLevelQueryParams="searchBy"
      preload=problemsPreloadValue
    }}
  {{else}}
    {{#link-to "problem" problem}}
      {{problem.title}}
    {{/link-to}}
  {{/if}}
</div>
<div class="info-flex-item linked-ws">
  <p class="label">
    Linked Workspaces
    <i
      class={{displayListsOptions.linkedWs.icon}}
      {{action "toggleProperty" "areLinkedWsExpanded"}}
    ></i>
  </p>
  {{#if hasLinkedWorkspaces}}
    <ul class={{if areLinkedWsHidden "hidden"}}>
      {{#each linkedWorkspaces as |ws|}}
        <li>
          {{#link-to "workspace.work" ws.id}}
            {{ws.name}}
          {{/link-to}}
        </li>
      {{else}}

      {{/each}}
    </ul>
  {{else}}
    <p class="value no-linked-ws">
      N/A
    </p>
  {{/if}}
    {{#if showLinkedWsForm}}
      {{linked-workspaces-new
        students=studentsWithoutWorkspaces
        assignment=assignment
        section=section
        problem=problem
        onCancel=(action (mut showLinkedWsForm) false)
        store=store
        handleResults=(action "handleCreatedLinkedWs")
      }}
    {{/if}}
    {{#if showAddLinkedWsBtn}}
      <button
        data-test="add-linked-ws"
        class="primary-button"
        {{action (mut showLinkedWsForm) true}}
      >
        Add Linked
        Workspaces
      </button>
    {{/if}}
    {{#if showFullLinkedWsMsg}}
      <p class="info" data-test="info-full-linked-ws">All students are already owner of a linked workspace</p>
    {{/if}}
</div>
<div class="info-flex-item parent-ws">
  <p class="label">
    Parent Workspace
  </p>
  {{#if parentWorkspace}}
    {{#link-to "workspace.work" parentWorkspace.id}}
      {{parentWorkspace.name}}
    {{/link-to}}
  {{else}}
    <p class="value no-parent-ws">
      N/A
    </p>
  {{/if}}
  {{#if showParentWsForm}}
    {{parent-workspace-new childWorkspaces=assignment.linkedWorkspaces assignment=assignment section=section problem=problem
    onCancel=(action (mut showParentWsForm) false)
    store=store
    handleResults=(action "handleCreatedParentWs")
    }}
  {{/if}}
  {{#if showAddParentWsBtn}}
    <button data-test="add-parent-ws" class="primary-button" {{action (mut showParentWsForm) true}}>Add Parent
      Workspace</button>
  {{/if}}
  {{#if showNoParentWsMsg}}
    <p class="info" data-test="info-no-parent-ws">You must first add linked workspaces in order to add a parent workspace</p>
  {{/if}}

</div>
<div class="info-flex-item submissions">
  <p class="label">
    Submissions
    <i
      class={{displayListsOptions.submissions.icon}}
      {{action "toggleProperty" "areSubmissionsExpanded"}}
    ></i>
  </p>
  {{assignment-report
    details=assignment.reportDetails
    assignment=assignment
    students=studentList
    hidden=areSubmissionsHidden
  }}
</div>
<div class="info-flex-item actions">
  {{#if showEditButton}}
    <button
      data-test="edit-assignment"
      class="primary-button"
      {{action "editAssignment"}}
    >
      Edit
    </button>
  {{/if}}
  {{#if isEditing}}
    <button class="primary-button" data-test="assn-save" {{action "updateAssignment"}}>
      Save
    </button>
    <button class="primary-button cancel-button" data-test="assn-cancel" {{action "stopEditing"}}>
      Cancel
    </button>
    <button data-test="trash-assn" class="right" {{action "showDeleteModal"}}>
      <i class="fa fa-trash" aria-hidden="true"></i>
    </button>
  {{/if}}
</div>
<div class="info-flex-item errors">
 {{#each findRecordErrors as |error|}}
    <p class="error-message">{{error}}</p>
  {{/each}}
  {{#each updateRecordErrors as |error|}}
    <p class="error-message">{{error}}</p>
  {{/each}}
  {{#each dataFetchErrors as |error|}}
    <p class="error-message">{{error}}</p>
  {{/each}}
  {{#if isMissingRequiredFields}}
    <p class="error-message">Please provide all required fields.</p>
  {{/if}}
  {{#if invalidDateRange}}
    <p class="error-message">Invalid Date Range</p>
  {{/if}}
</div>
